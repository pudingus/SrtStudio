/**************************************************************************************

   Toolkit for WPF

   Copyright (C) 2007-2016 Xceed Software Inc.

   This program is provided to you under the terms of the Microsoft Public
   License (Ms-PL) as published at http://wpftoolkit.codeplex.com/license 

   For more features, controls, and fast professional support,
   pick up the Plus Edition at https://xceed.com/xceed-toolkit-plus-for-wpf/

   Stay informed: follow @datagrid on Twitter or Like http://facebook.com/datagrids

  **************************************************************************************/


using System;
using System.Collections.Generic;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Media.Animation;
namespace Xceed.Wpf.Toolkit.LiveExplorer.Samples.MaterialControls.Views
{
  /// <summary>
  /// Interaction logic for MaterialProgressBarCircularView.xaml
  /// </summary>
  public partial class MaterialProgressBarCircularView : MaterialDemoView
  {
    #region Constructors

    public MaterialProgressBarCircularView()
    {
      InitializeComponent();

#if !OPEN_SOURCE
      this.Loaded += this.MaterialProgressBarCircularView_Loaded;
#endif
    }

    #endregion

#if !OPEN_SOURCE

    #region Private Methods

    private void AnimateDeterminateProgressBar()
    {
      var storyboard = new Storyboard();

      // Animate Determinate Circular ProgressBar
      DoubleAnimation valueAnim = new DoubleAnimation( materialDeterminateProgressBarCircular.Minimum, materialDeterminateProgressBarCircular.Maximum, System.TimeSpan.FromMilliseconds( 4000 ) );
      Storyboard.SetTarget( valueAnim, materialDeterminateProgressBarCircular );
      Storyboard.SetTargetProperty( valueAnim, new PropertyPath( MaterialProgressBarCircular.ValueProperty ) );
      storyboard.Children.Add( valueAnim );

      storyboard.Begin( this );
    }

    #endregion

    #region Event Handlers

    private void MaterialProgressBarCircularView_Loaded( object sender, RoutedEventArgs e )
    {
      this.AnimateDeterminateProgressBar();
    }

    private void ResetButton_Click( object sender, RoutedEventArgs e )
    {
      this.AnimateDeterminateProgressBar();
    }

    #endregion
#endif
  }
}
